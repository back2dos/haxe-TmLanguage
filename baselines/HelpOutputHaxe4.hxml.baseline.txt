original file
-----------------------------------
Target
  --js <file>                                   compile code to JavaScript file
  --lua <file>                                  compile code to Lua file
  --swf <file>                                  compile code to Flash SWF file
  --as3 <directory>                             generate AS3 code into target directory
  --neko <file>                                 compile code to Neko Binary
  --php <directory>                             generate PHP code into target directory
  --cpp <directory>                             generate C++ code into target directory
  --cppia <file>                                generate Cppia code into target file
  --cs <directory>                              generate C# code into target directory
  --java <directory>                            generate Java code into target directory
  --python <file>                               generate Python code as target file
  --hl <file>                                   compile HL code as target file
  --interp                                      interpret the program using internal macro system
Compilation
  -p,
  --class-path <path>                       add a directory to find source files
  -m,
  --main <class>                            select startup class
  -L,
  --library <library[:version]>             use a haxelib library
  -D,
  --define <var[=value]>                    define a conditional compilation flag
  -r,
  --resource <file>[@name]                  add a named resource file
  --cmd <command>                               run the specified command after successful compilation
  --remap <package:target>                      remap a package to another one
#   --macro <macro>                               call the given macro before typing anything else
  -C,
  --cwd <dir>                               set current working directory
Optimization
  --dce,
  --dead-code-elimination [std|full|no]  set the dead code elimination mode (default std)
  --no-traces                                   don't compile trace calls in the program
  --no-output                                   compiles but does not generate any file
  --no-inline                                   disable inlining
  --no-opt                                      disable code optimizations
Debug
  -v,
  --verbose                                 turn on verbose mode
  --debug                                       add debug information to the compiled code
  --prompt                                      prompt on error
  --times                                       measure compilation times
Batch
  --next                                        separate several haxe compilations
  --each                                        append preceding parameters to all haxe compilations separated by --next
Services
  --display                                     display code tips
  --xml <file>                                  generate XML types description
  --json <file>                                 generate JSON types description
  --gen-hx-classes                              generate hx headers for all input classes
Compilation Server
  --wait [[host:]port]|stdio]                   wait on the given port (or use standard i/o) for commands to run)
  --connect <[host:]port>                       connect on the given port and run commands there)
Target-specific
  --swf-version <version>                       change the SWF version
  --swf-header <header>                         define SWF header (width:height:fps:color)
  --swf-lib <file>                              add the SWF library to the compiled SWF
  --swf-lib-extern <file>                       use the SWF library for type checking
  --flash-strict                                more type strict flash API
  --java-lib <file>                             add an external JAR or class directory library
  --net-lib <file>[@std]                        add an external .NET DLL file
  --net-std <file>                              add a root std .NET DLL search path
  --c-arg <arg>                                 pass option <arg> to the native Java/C# compiler
Miscellaneous
  --version                                     print version and exit
  -h,
  --help                                    show extended help information
  --help-defines                                print help for all compiler specific defines
  --help-metas                                  print help for all compiler metadatas
  --run <module> [args...]                      compile and execute a Haxe module with command line arguments
  -- [args...]                                  args that will be passed to the macro interpreter

-----------------------------------

>Target
 ^^^^^^^
 source.hxml
>  --js <file>                                   compile code to JavaScript file
 ^^
 source.hxml
   ^^^^
   source.hxml keyword.other.hxml
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       source.hxml
>  --lua <file>                                  compile code to Lua file
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --swf <file>                                  compile code to Flash SWF file
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --as3 <directory>                             generate AS3 code into target directory
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --neko <file>                                 compile code to Neko Binary
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --php <directory>                             generate PHP code into target directory
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --cpp <directory>                             generate C++ code into target directory
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --cppia <file>                                generate Cppia code into target file
 ^^
 source.hxml
   ^^^^^^^
   source.hxml keyword.other.hxml
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          source.hxml
>  --cs <directory>                              generate C# code into target directory
 ^^
 source.hxml
   ^^^^
   source.hxml keyword.other.hxml
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       source.hxml
>  --java <directory>                            generate Java code into target directory
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --python <file>                               generate Python code as target file
 ^^
 source.hxml
   ^^^^^^^^
   source.hxml keyword.other.hxml
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.hxml
>  --hl <file>                                   compile HL code as target file
 ^^
 source.hxml
   ^^^^
   source.hxml keyword.other.hxml
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       source.hxml
>  --interp                                      interpret the program using internal macro system
 ^^
 source.hxml
   ^^^^^^^^
   source.hxml keyword.other.hxml
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.hxml
>Compilation
 ^^^^^^^^^^^^
 source.hxml
>  -p,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --class-path <path>                       add a directory to find source files
 ^^
 source.hxml
   ^^^^^^^^^^^^
   source.hxml keyword.other.hxml
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               source.hxml
>  -m,
 ^
 source.hxml
  ^
  source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^^
     source.hxml
>  --main <class>                            select startup class
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  -L,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --library <library[:version]>             use a haxelib library
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  -D,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --define <var[=value]>                    define a conditional compilation flag
 ^^
 source.hxml
   ^^^^^^^^
   source.hxml keyword.other.hxml
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.hxml
>  -r,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --resource <file>[@name]                  add a named resource file
 ^^
 source.hxml
   ^^^^^^^^^^
   source.hxml keyword.other.hxml
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             source.hxml
>  --cmd <command>                               run the specified command after successful compilation
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --remap <package:target>                      remap a package to another one
 ^^
 source.hxml
   ^^^^^^^
   source.hxml keyword.other.hxml
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          source.hxml
>#   --macro <macro>                               call the given macro before typing anything else
 ^
 source.hxml comment.line.number-sign.hxml punctuation.definition.comment.hxml
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  source.hxml comment.line.number-sign.hxml
>  -C,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --cwd <dir>                               set current working directory
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>Optimization
 ^^^^^^^^^^^^^
 source.hxml
>  --dce,
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^
        source.hxml
>  --dead-code-elimination [std|full|no]  set the dead code elimination mode (default std)
 ^^
 source.hxml
   ^^^^^^^^^^^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          source.hxml
>  --no-traces                                   don't compile trace calls in the program
 ^^
 source.hxml
   ^^^^^^^^^^^
   source.hxml keyword.other.hxml
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
              source.hxml
>  --no-output                                   compiles but does not generate any file
 ^^
 source.hxml
   ^^^^^^^^^^^
   source.hxml keyword.other.hxml
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
              source.hxml
>  --no-inline                                   disable inlining
 ^^
 source.hxml
   ^^^^^^^^^^^
   source.hxml keyword.other.hxml
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
              source.hxml
>  --no-opt                                      disable code optimizations
 ^^
 source.hxml
   ^^^^^^^^
   source.hxml keyword.other.hxml
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.hxml
>Debug
 ^^^^^^
 source.hxml
>  -v,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --verbose                                 turn on verbose mode
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  --debug                                       add debug information to the compiled code
 ^^
 source.hxml
   ^^^^^^^
   source.hxml keyword.other.hxml
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          source.hxml
>  --prompt                                      prompt on error
 ^^
 source.hxml
   ^^^^^^^^
   source.hxml keyword.other.hxml
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.hxml
>  --times                                       measure compilation times
 ^^
 source.hxml
   ^^^^^^^
   source.hxml keyword.other.hxml
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          source.hxml
>Batch
 ^^^^^^
 source.hxml
>  --next                                        separate several haxe compilations
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --each                                        append preceding parameters to all haxe compilations separated by --next
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>Services
 ^^^^^^^^^
 source.hxml
>  --display                                     display code tips
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  --xml <file>                                  generate XML types description
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  --json <file>                                 generate JSON types description
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --gen-hx-classes                              generate hx headers for all input classes
 ^^
 source.hxml
   ^^^^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                   source.hxml
>Compilation Server
 ^^^^^^^^^^^^^^^^^^^
 source.hxml
>  --wait [[host:]port]|stdio]                   wait on the given port (or use standard i/o) for commands to run)
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --connect <[host:]port>                       connect on the given port and run commands there)
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>Target-specific
 ^^^^^^^^^^^^^^^^
 source.hxml
>  --swf-version <version>                       change the SWF version
 ^^
 source.hxml
   ^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                source.hxml
>  --swf-header <header>                         define SWF header (width:height:fps:color)
 ^^
 source.hxml
   ^^^^^^^^^^^^
   source.hxml keyword.other.hxml
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               source.hxml
>  --swf-lib <file>                              add the SWF library to the compiled SWF
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  --swf-lib-extern <file>                       use the SWF library for type checking
 ^^
 source.hxml
   ^^^^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                   source.hxml
>  --flash-strict                                more type strict flash API
 ^^
 source.hxml
   ^^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.hxml
>  --java-lib <file>                             add an external JAR or class directory library
 ^^
 source.hxml
   ^^^^^^^^^^
   source.hxml keyword.other.hxml
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             source.hxml
>  --net-lib <file>[@std]                        add an external .NET DLL file
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  --net-std <file>                              add a root std .NET DLL search path
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  --c-arg <arg>                                 pass option <arg> to the native Java/C# compiler
 ^^
 source.hxml
   ^^^^^^^
   source.hxml keyword.other.hxml
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          source.hxml
>Miscellaneous
 ^^^^^^^^^^^^^^
 source.hxml
>  --version                                     print version and exit
 ^^
 source.hxml
   ^^^^^^^^^
   source.hxml keyword.other.hxml
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.hxml
>  -h,
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^
     source.hxml
>  --help                                    show extended help information
 ^^
 source.hxml
   ^^^^^^
   source.hxml keyword.other.hxml
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.hxml
>  --help-defines                                print help for all compiler specific defines
 ^^
 source.hxml
   ^^^^^^^^^^^^^^
   source.hxml keyword.other.hxml
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.hxml
>  --help-metas                                  print help for all compiler metadatas
 ^^
 source.hxml
   ^^^^^^^^^^^^
   source.hxml keyword.other.hxml
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               source.hxml
>  --run <module> [args...]                      compile and execute a Haxe module with command line arguments
 ^^
 source.hxml
   ^^^^^
   source.hxml keyword.other.hxml
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        source.hxml
>  -- [args...]                                  args that will be passed to the macro interpreter
 ^^
 source.hxml
   ^^
   source.hxml keyword.other.hxml
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     source.hxml
>
 ^
 source.hxml